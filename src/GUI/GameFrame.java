package GUI;

import DATA.UserData;
import Model.Item;
import Model.Pet;
import Model.User;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * this class represent interface of main screen
 *
 * @author Yu Liu
 */
public class GameFrame extends javax.swing.JFrame implements INotify {

    public int i;

    public GameFrame() {
        initComponents();
        WindowUtil.center(this);
        userData = UserData.getInstance();
        userData.setNotify(this);
    }

    /**
     * this method loading pet image
     *
     * @param fileName represent the name of image
     */
    private void loadPetImage(String fileName) {
        ImageIcon imageIcon = new ImageIcon(getClass().getResource(fileName));
        pictureLabel.setIcon(imageIcon);
    }

    /**
     *
     * return the introduction of pet game
     *
     * @return the details of introduction
     */
    public String getIntroduction() {
        String output = "-----------------------------------------------------------------------------------------"
                + "\n                                          Welcome                                                  "
                + "\n"
                + "\n Adopt a virtual dog in this game."
                + "\n You can answer question to earn money, and buy some items for your lovely dog. "
                + "\n Don't forget feed it and play with it."
                + "\n Fighting with other pets is also an interesting choice!"
                + "\n Enjoy your game! Good Luck !!!"
                + "\n Notice, button abandon will abandon the current account"
                + "\n Button abandon all will abandon all accounts in database"
                + "\n Use this option with caution!"
                + "\n"
                + "\n"
                + "\n-----------------------------------------------------------------------------------------";
        return output;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        labelPetName = new javax.swing.JLabel();
        labelMoney = new javax.swing.JLabel();
        labelStrength = new javax.swing.JLabel();
        labelAgility = new javax.swing.JLabel();
        labelStamina = new javax.swing.JLabel();
        labelHappiness = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        pictureLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableGoods = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        buttonMindCompetition = new javax.swing.JButton();
        buttonShop = new javax.swing.JButton();
        buttonEat = new javax.swing.JButton();
        buttonDungeon = new javax.swing.JButton();
        help = new javax.swing.JButton();
        abandonAll = new javax.swing.JButton();
        buttonLogout = new javax.swing.JButton();
        buttonAbandon = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pet Game");
        setAlwaysOnTop(true);
        setPreferredSize(new java.awt.Dimension(1030, 550));
        setResizable(false);

        jPanel1.setLayout(new java.awt.GridLayout(1, 2));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Property"));

        labelPetName.setText("PetName");

        labelMoney.setText("Money");

        labelStrength.setText("Strength");

        labelAgility.setText("Agility");

        labelStamina.setText("Stamina");

        labelHappiness.setText("Happiness");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(labelPetName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(labelMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(labelStrength, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(labelAgility, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(labelStamina, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(labelHappiness, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPetName, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelStrength, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAgility, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelStamina, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelHappiness, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel1.add(jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Picture"));
        jPanel3.setLayout(new java.awt.BorderLayout());

        pictureLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel3.add(pictureLabel, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("BackPack"));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 200));

        tableGoods.setModel(new GoodsTableModel());
        tableGoods.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tableGoods);
        tableGoods.getAccessibleContext().setAccessibleName("Back Pack");

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);
        jScrollPane1.getAccessibleContext().setAccessibleDescription("");

        jPanel5.setPreferredSize(new java.awt.Dimension(683, 70));

        buttonMindCompetition.setText("MindCompetition");
        buttonMindCompetition.setPreferredSize(new java.awt.Dimension(130, 25));
        buttonMindCompetition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMindCompetitionActionPerformed(evt);
            }
        });
        jPanel5.add(buttonMindCompetition);

        buttonShop.setText("Shop");
        buttonShop.setPreferredSize(new java.awt.Dimension(80, 25));
        buttonShop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonShopActionPerformed(evt);
            }
        });
        jPanel5.add(buttonShop);

        buttonEat.setText("Use");
        buttonEat.setPreferredSize(new java.awt.Dimension(80, 25));
        buttonEat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEatActionPerformed(evt);
            }
        });
        jPanel5.add(buttonEat);

        buttonDungeon.setText("Dungeon");
        buttonDungeon.setPreferredSize(new java.awt.Dimension(100, 25));
        buttonDungeon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDungeonActionPerformed(evt);
            }
        });
        jPanel5.add(buttonDungeon);

        help.setText("Help");
        help.setPreferredSize(new java.awt.Dimension(100, 25));
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });
        jPanel5.add(help);

        abandonAll.setText("Abandon All");
        abandonAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abandonAllActionPerformed(evt);
            }
        });
        jPanel5.add(abandonAll);

        buttonLogout.setText("Logout");
        buttonLogout.setPreferredSize(new java.awt.Dimension(80, 25));
        buttonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLogoutActionPerformed(evt);
            }
        });
        jPanel5.add(buttonLogout);

        buttonAbandon.setText("Abandon");
        buttonAbandon.setMaximumSize(new java.awt.Dimension(83, 50));
        buttonAbandon.setMinimumSize(new java.awt.Dimension(83, 50));
        buttonAbandon.setPreferredSize(new java.awt.Dimension(100, 25));
        buttonAbandon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAbandonActionPerformed(evt);
            }
        });
        jPanel5.add(buttonAbandon);

        jButton1.setText("Exit");
        jButton1.setPreferredSize(new java.awt.Dimension(80, 25));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Files/fundog.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1024, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.getAccessibleContext().setAccessibleName("Backpack");
        jPanel5.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAbandonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAbandonActionPerformed
        if (JOptionPane.showConfirmDialog(this, "you sure abandon account?", "warnning", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
            userData.delete(userData.getLoginUser());
            setVisible(false);
            Game.welcome();
        }
    }//GEN-LAST:event_buttonAbandonActionPerformed

    private void buttonMindCompetitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMindCompetitionActionPerformed
        MindCompetition MindDialog = new MindCompetition(this, true);
        MindDialog.setVisible(true);
        userData.getLoginUser().setStatus("idle");
    }//GEN-LAST:event_buttonMindCompetitionActionPerformed

    private void buttonShopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonShopActionPerformed
        ShopDialog shopDialog = new ShopDialog(this, true);
        shopDialog.setVisible(true);
        userData.getLoginUser().setStatus("idle");
        showProperty();
    }//GEN-LAST:event_buttonShopActionPerformed

    private void buttonEatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEatActionPerformed
        try {
            int index = tableGoods.getSelectedRow();
            // the row of item list can not less than 0
            if (index >= 0) {
                Item goods = goodsList.get(index);
                userData.eat(userData.getLoginUser(), goods);
                showProperty();
                JOptionPane.showMessageDialog(this, "use item success.");
            } else {
                JOptionPane.showMessageDialog(this, "no such item.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "no such item.");
        }
    }//GEN-LAST:event_buttonEatActionPerformed

    private void buttonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLogoutActionPerformed
        if (JOptionPane.showConfirmDialog(this, "you sure logout?", "warnning", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
            userData.setLoginUser(null);
            setVisible(false);
            Game.welcome();
        }
    }//GEN-LAST:event_buttonLogoutActionPerformed
    private FightDialog fightDialog;
    private void buttonDungeonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDungeonActionPerformed
        fightDialog = new FightDialog(this, true, i);
        fightDialog.setVisible(true);

        userData.getLoginUser().setStatus("idle");
    }//GEN-LAST:event_buttonDungeonActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        JOptionPane.showMessageDialog(this, getIntroduction(), "Introduction", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_helpActionPerformed

    private void abandonAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abandonAllActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "you sure abandon all accounts?", "warnning", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
            userData.deleteAll();
            setVisible(false);
            Game.welcome();
        }
    }//GEN-LAST:event_abandonAllActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "you sure exit?", "warnning", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * this method load the picture
     */
    public void showPicture() {
        String kind = userData.getLoginUser().getKind();
        String fileName = "/Files/" + "s" + kind + ".gif";
        loadPetImage(fileName);
    }

    /**
     * this method show the property of pet
     */
    public void showProperty() {
        User user = userData.getLoginUser();
        Pet pet = user.getPet();
        labelPetName.setText("Pet Name: " + pet.getName());
        labelMoney.setText("Money: " + pet.getMoney());
        labelStrength.setText("Strength: " + pet.getStrength());
        labelAgility.setText("Agility: " + pet.getAgility());
        labelStamina.setText("Stamina: " + pet.getStamina());
        labelHappiness.setText("Happiness: " + pet.getHappiness());
        goodsList = pet.listGoods();
        tableGoods.updateUI();
    }

    /**
     * this method show the new data of pet
     */
    @Override
    public void dataChange() {
        try {
            showProperty();
        } catch (Exception e) {
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abandonAll;
    private javax.swing.JButton buttonAbandon;
    private javax.swing.JButton buttonDungeon;
    private javax.swing.JButton buttonEat;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton buttonLogout;
    private javax.swing.JButton buttonMindCompetition;
    private javax.swing.JButton buttonShop;
    private javax.swing.JButton help;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelAgility;
    private javax.swing.JLabel labelHappiness;
    private javax.swing.JLabel labelMoney;
    private javax.swing.JLabel labelPetName;
    private javax.swing.JLabel labelStamina;
    private javax.swing.JLabel labelStrength;
    private javax.swing.JLabel pictureLabel;
    private javax.swing.JTable tableGoods;
    // End of variables declaration//GEN-END:variables
    private UserData userData;
    private List<Item> goodsList;

    // this method represent the talbe of goods model
    private class GoodsTableModel extends DefaultTableModel {

        @Override
        public int getColumnCount() {
            return 6;
        }

        @Override
        public int getRowCount() {
            if (goodsList != null) {
                return goodsList.size();
            } else {
                return 0;
            }
        }

        /**
         * return the parameter of goods items
         *
         * @param row represent the row of good table
         * @param column represen the column of good table
         * @return
         */
        @Override
        public Object getValueAt(int row, int column) {
            Item goods = goodsList.get(row);
            Pet pet = userData.getLoginUser().getPet();
            switch (column) {
                case 0:
                    return goods.getName();
                case 1:
                    return pet.getGoodsQty(goods);
                case 2:
                    return goods.getStrength();
                case 3:
                    return goods.getAgility();
                case 4:
                    return goods.getStamina();
                case 5:
                    return goods.getHappiness();
            }
            return "";
        }

        // this method set the title of every row
        @Override
        public String getColumnName(int column) {
            switch (column) {
                case 0:
                    return "Name";
                case 1:
                    return "Quantity";
                case 2:
                    return "strength";
                case 3:
                    return "agility";
                case 4:
                    return "stamina";
                case 5:
                    return "happiness";
            }
            return "";
        }
    }
}
